<div class="min-h-full" id="menu1">
    <%= render partial: 'layouts/header' %>

    <%= form_with model: @order, url: confirm_path, local: true, class: "form_with" do |form| %>
    <div>
        <%= image_tag "top_image.JPG", alt: 'src', class: "top-image", style: "max-height: 450px;" %>
    </div>

    <main>
        <div class="mx-auto max-w-7xl py-6 sm:px-6 lg:px-8">
            <%# メインコンテンツ %>
            <div class="bg-white" id="menu2">
                <%# TODO: productが存在する条件文 %>
                <div class="mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-18 lg:max-w-7xl lg:px-8">
                    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
                        <%= image_tag "hannah_logo.png", alt: 'src', class: "mx-auto h-10 w-auto" %>
                        <h2 class="mt-6 text-center text-2xl font-bold leading-9 tracking-tight text-lime-900">Products</h2>
                    </div>

                    <%= render 'layouts/top_error_message', model: form.object %>

                    <%# TODO: selectのメッセージが出てない %>
                    <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'select'} %>

                    <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'you'} %>

                    <div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-12 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8">
                        <%# 商品カード(DB)  %>
                        <% @products.each do |product| %>
                            <div class="group relative">
                                <input value="<%= product.name %>" autocomplete="off" type="hidden" name="order[select][<%= product.id %>][product_name]" id="_order_29_product_name">
                                <div class="relative aspect-h-1 aspect-w-1 w-full overflow-hidden rounded-md bg-gray-200 lg:aspect-none group-hover:opacity-75 lg:h-60">
                                    <%= image_tag(product.image.present? ? product.image : "no_image.jpg", alt: '', class: "aspect-square h-full w-full object-cover object-center lg:h-full lg:w-full") %>
                                    <% if product.fast_shipping_flg %>
                                        <p class="absolute bottom-0 mb-2 block w-full rounded-md bg-lime-600 px-3.5 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-lime-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-lime-600">express delivery</p>
                                    <% end %>
                                </div>
                                <div class="mt-4 flex justify-between">
                                    <div>
                                        <h3 class="text-sm text-gray-700">
                                        <p class="text-turn-around">
                                            <span aria-hidden="true" class="absolute inset-0"></span>
                                            <%= product.name %>
                                        </p>
                                        </h3>
                                        <p class="mt-1 text-sm text-gray-500 text-turn-around"><%= product.summary %></p>
                                    </div>
                                </div>
                                <div class="w-2/3">
                                    <div class="relative mt-2">
                                        <input value="" autocomplete="off" type="hidden" name="order[select][<%= product.id %>][price]" id="">
                                        <% if !product.sold_out_flg %>
                                            <select name="order[select][<%= product.id %>][choice]" id="" class="choices_select appearance-none cursor-pointer relative w-full cursor-default rounded-md bg-white py-1.5 pl-3 pr-10 text-left text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 sm:text-sm sm:leading-6">
                                                <option value="">select choices</option>
                                                <% product.choices.each do |hash| %>
                                                    <% hash.each do |id, value| %>
                                                        <% choice_text = value["gram"] + "g / " + number_with_delimiter(value["price"]) + "baht" %>
                                                        <%# {gram}g/{price}bathの形でoptionのvalueに代入 %>
                                                        <option 
                                                            value="<%= value["gram"] + "g / " + number_with_delimiter(value["price"]) + "baht" %>" 
                                                            class="choices_option"
                                                            <%# 選択されていた値と一致する場合selectedにする %>
                                                            <%= 'selected' if @history&.dig(product.id.to_s, "choice") == choice_text %>
                                                        >
                                                            <span class=""><%= choice_text %></span>
                                                        </option>
                                                    <% end %><%# /hash.each %>
                                                <% end %><%# /product.choices.each %>
                                            </select>
                                            <span class="pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2"></span>
                                        <% else %>
                                            <p class="block w-full rounded-md bg-red-600 px-3.5 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red-600">sold out</p>
                                        <% end %>
                                    </div>
                                </div>
                            </div><%# /商品カード（DB） %>
                        <% end %><%# /products.each %>
                    </div>
                </div>
            </div><%# メインコンテンツここまで %>
            
            <%# オーダー情報 %>
            <div class="mx-auto max-w-2xl px-4 py-4 sm:px-3 sm:py-18 lg:max-w-7xl lg:px-8" id="menu3">
                <div class="flex min-h-full flex-col justify-center pt-6 mb-12 py-12 lg:px-8">
                    <div class="sm:mx-auto sm:w-full sm:max-w-sm">
                        <%= image_tag "hannah_logo.png", alt: 'src', class: "mx-auto h-10 w-auto" %>
                        <h2 class="mt-3 text-center text-2xl font-bold leading-9 tracking-tight text-lime-900">Place an order</h2>
                    </div>

                    <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
                        <div class="mt-4">
                            <%= form.label :name, "Your name", class: "block text-sm font-medium leading-6 text-gray-900" %>
                            <div class="mt-1">
                                <%= form.text_field :name, 
                                value: (@name if @name.present?),
                                required: true,
                                class: "block w-full rounded-md border-0 px-1.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" %>
                                <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'name'} %>
                            </div>
                        </div>

                        <div class="mt-4">
                            <%= form.label :address, "Shipping address", class: "block text-sm font-medium leading-6 text-gray-900" %>
                            <div class="mt-1">
                                <%= form.text_area :address, 
                                value: (@address if @address.present?),
                                required: true,
                                class: "block w-full rounded-md border-0 px-1.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" %>
                                <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'address'} %>
                            </div>
                        </div>

                        <div class="mt-4">
                            <%= form.label :delivery_date, "Desired delivery date", class: "block text-sm font-medium leading-6 text-gray-900" %>
                            <p class="block text-sm font-medium leading-6 text-gray-500">・You can select from 2 hours at the earliest.</p>
                            <p class="block text-sm font-medium leading-6 text-gray-500">・Please select a date within one week.</p>
                            <p class="block text-sm font-medium leading-6 text-gray-500">・Please note that delivery time may vary depending on delivery status and inventory status.</p>
                            <div class="mt-1 block w-full rounded-md border-0 px-1.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                                <%= form.select :delivery_date, 
                                    [ ["Today : #{Date.today}", Date.today],["Tomorrow : #{Date.today + 1.days}", Date.today + 1.days],["2 days later : #{Date.today + 2.days}", Date.today + 2.days],], 
                                    # ここを引き継ぎたい
                                    { selected: @delivery_date }, 
                                    { id: "order_date", class: "w-full" }
                                    %>
                                <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'date'} %>
                            </div>
                        </div>

                        <div class="mt-4">
                            <%= form.label :delivery_time, "Desired delivery time", class: "block text-sm font-medium leading-6 text-gray-900" %>
                            <div class="mt-1 block w-full rounded-md border-0 px-1.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                                <% available_times = Order::DELIVERY_TIME.select { |time| Time.now + 2.hours <= Time.parse(time.split('~')[0]) } %>
                                <%= form.select :delivery_time, 
                                available_times, 
                                { selected: @delivery_time }, 
                                { id:"order_time", class: "w-full" } 
                                %>
                                <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'date'} %>
                            </div>
                        </div>

                        <div class="mt-4">
                            <%= form.label :email, "Your email", class: "block text-sm font-medium leading-6 text-gray-900" %>
                            <div class="mt-1">
                                <%= form.text_field :email, 
                                value: (@email if @email.present?),
                                required: true,
                                class: "block w-full rounded-md border-0 px-1.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" %>
                                <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'email'} %>
                            </div>
                        </div>

                        <div class="mt-4">
                            <%= form.label :phone_number, "Your phone number", class: "block text-sm font-medium leading-6 text-gray-900" %>
                            <div class="mt-2">
                                <%= form.text_field :phone_number, 
                                value: (@phone_number if @phone_number.present?),
                                class: "block w-full rounded-md border-0 px-1.5 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" %>
                                <%= render partial: 'layouts/error_messages', locals: { model: form.object, field_name: 'phone_number'} %>
                            </div>
                        </div>

                        <div>
                            <%= form.submit "Confirm order details", class: "flex w-full justify-center rounded-md bg-lime-600 mt-6 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-lime-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-lime-600" %>
                        </div>
                    </div>
                </div>
            </div><%# オーダー情報ここまで %>


            <%# 店舗情報 %>
            <div class="bg-gray-200 mx-auto max-w-2xl mt-8 px-4 py-16 sm:px-6 sm:py-18 lg:max-w-7xl lg:px-8" id="menu4">
                <div class="px-4 sm:px-0">
                    <h3 class="text-base font-semibold leading-7 text-gray-900">Shop Information</h3>
                    <p class="mt-1 max-w-2xl text-sm leading-6 text-gray-500">Leave your cannabis order to us.</p>
                </div>
                <div class="mt-6 border-t border-gray-100">
                    <dl class="divide-y divide-gray-100">
                    <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                        <dt class="text-sm font-medium leading-6 text-gray-900">Shop name</dt>
                        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">Hnnah group</dd>
                    </div>
                    <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                        <dt class="text-sm font-medium leading-6 text-gray-900">Store address</dt>
                        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">1819/246 Soi Sathu Pradit 57 Bang Phong Phang, Yan Nawa, Bangkok 10120</dd>
                    </div>
                    <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                        <dt class="text-sm font-medium leading-6 text-gray-900">LINE ID</dt>
                        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0"><a href="https://line.me/ti/p/4Q4DyfmWEI" target="_blank" rel="noopener noreferrer" class="text-sm font-semibold text-gray-900" style="border-bottom: solid 1px gray">taketake_02</span></a></dd>
                    </div>
                    <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                        <dt class="text-sm font-medium leading-6 text-gray-900">Email address</dt>
                        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">takeruaruketa@gmail.com</dd>
                    </div>
                    <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                        <dt class="text-sm font-medium leading-6 text-gray-900">Store phone number</dt>
                        <dd class="mt-2 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
                        <ul role="list" class="divide-y divide-gray-100 rounded-md border border-gray-200">
                            <li class="flex items-center justify-between py-4 pl-4 pr-5 text-sm leading-6">
                                <div class="flex w-0 flex-1 items-center">
                                    <span class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">+81 70-3828-8839</span>
                                </div>
                            </li>
                            <li class="flex items-center justify-between py-4 pl-4 pr-5 text-sm leading-6">
                                <div class="flex w-0 flex-1 items-center">
                                    <span class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">+66 99-571-4805</span>
                                </div>
                            </li>
                        </ul>
                        </dd>
                    </div>
                    <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
                        <dt class="text-sm font-medium leading-6 text-gray-900">contact us</dt>
                        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">If you have any questions or requests, please contact us on LINE.<br><a href="https://line.me/ti/p/4Q4DyfmWEI" target="_blank" rel="noopener noreferrer" class="text-sm font-semibold text-gray-900">Contact support <span aria-hidden="true">&rarr;</span></a></dd>
                    </div>
                    </dl>
                </div>
            </div>
        </div>
    </main>

    <% end %><%# /form_with %>

    <%# フッター %>
    <%= render partial: 'layouts/footer' %>

</div>
<%# TODO: JSを切り分けて保存 %>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // ボタン、メニューを定数定義
        const mobileMenuButton = document.querySelector('#toggleButton');
        const mobileMenu = document.getElementById('mobile-menu');

        // ハンバーガーメニュー押下でメニュー表示切り替え
        mobileMenuButton.addEventListener('click', function () {
        mobileMenu.classList.toggle('hidden');
        });

        // セレクトボックスが変更されたときの処理
        document.querySelectorAll('.choices_select').forEach(function(select) {
            select.addEventListener('change', function() {
                
                // 選択されたオプションの値を取得
                let selectedOption = select.options[select.selectedIndex];

                let inputString = selectedOption.innerText;

                // 正規表現パターン
                let pattern = /(\d+)g \/ (\d+)baht/;

                // パターンに一致する部分を抽出
                let matchResult = inputString.match(pattern);
                // console.log(matchResult);

                // マッチした部分の数値を取り出す
                if (matchResult && matchResult[1] && matchResult[2]) {
                let priceValue = parseInt(matchResult[2], 10);

                // 非表示のinputタグを取得
                let target = this.previousElementSibling;

                target.value = priceValue;
                }
            });
        });
    });


    window.onload = function() {
        document.querySelectorAll('.choices_select').forEach(function(select) {
            select.addEventListener('DOMContentLoaded', function() {
                console.log('リロードにより発火')
                // 選択されたオプションの値を取得
                let selectedOption = select.options[select.selectedIndex];

                let inputString = selectedOption.innerText;

                // 正規表現パターン
                let pattern = /(\d+)g \/ (\d+)baht/;

                // パターンに一致する部分を抽出
                let matchResult = inputString.match(pattern);
                // console.log(matchResult);

                // マッチした部分の数値を取り出す
                if (matchResult && matchResult[1] && matchResult[2]) {
                let priceValue = parseInt(matchResult[2], 10);

                // 非表示のinputタグを取得
                let target = this.previousElementSibling;

                target.value = priceValue;
                }
            });

        });

    };

    const smoothScrollTrigger = document.querySelectorAll('a[href^="#"]');
        for (let i = 0; i < smoothScrollTrigger.length; i++){
            smoothScrollTrigger[i].addEventListener('click', (e) => {
                e.preventDefault();
                let href = smoothScrollTrigger[i].getAttribute('href');
                let targetElement = document.getElementById(href.replace('#', ''));
                const rect = targetElement.getBoundingClientRect().top;
                const offset = window.pageYOffset;
                const gap = 60;
                const target = rect + offset - gap;
                window.scrollTo({
                    top: target,
                    behavior: 'smooth',
                });
            });
        }
    
    // 日付選択と時刻に関する記述
    document.addEventListener('DOMContentLoaded', function () {
        const dateSelect = document.getElementById('order_date'); // 実際のdateセレクトボックスのIDに変更してください

        const timeSelect = document.getElementById('order_time'); // 実際のtimeセレクトボックスのIDに変更してください

        dateSelect.addEventListener('change', function () {
            const selectedDate = new Date(dateSelect.value);
            const today = new Date();

            if (selectedDate.setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)) {
                // パターンA: Todayが選択された場合
                console.log("todayパターン");
                const now = new Date();
                now.setHours(now.getHours() + 2); // 現在時刻の2時間後

                // MEMO: せめてrailsで定義した定数を持ってくる
                const availableTimes = [
                    '10:00~12:00',
                    '12:00~14:00',
                    '14:00~16:00',
                    '16:00~18:00',
                    '18:00~20:00',
                    '20:00~22:00',
                    '22:00~23:00'
                ];

                // 一度選択肢をクリア
                timeSelect.innerHTML = '';

                // 現在時刻の2時間後以降の選択肢を生成
                for (let i = 0; i < availableTimes.length; i++) {
                    const startTime = availableTimes[i].split('~')[0];
                    if (now.getHours() <= parseInt(startTime.split(':')[0])) {
                    const option = document.createElement('option');
                    option.value = availableTimes[i];
                    option.text = availableTimes[i];
                    timeSelect.add(option);
                    }
                }
            } else {
                // パターンB: Today以外が選択された場合
                timeSelect.innerHTML = `
                                    <option value="10:00~12:00">10:00~12:00</option>
                                    <option value="12:00~14:00">12:00~14:00</option>
                                    <option value="14:00~16:00">14:00~16:00</option>
                                    <option value="16:00~18:00">16:00~18:00</option>
                                    <option value="18:00~20:00">18:00~20:00</option>
                                    <option value="20:00~22:00">20:00~22:00</option>
                                    <option value="22:00~23:00">22:00~23:00</option>
                                    `;
            }
        });
    });
</script>